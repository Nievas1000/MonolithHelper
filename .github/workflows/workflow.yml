name: Codojo CI

on:
  push:
    branches: [main]
  pull_request: 
    branches: [main]
  workflow_call:

jobs:
# Cancel Previous Redundant Builds
  avoid_reduncy:
    runs-on: ubuntu-latest
    steps: 
      - name: Cancel Previus Builds
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{github.token}}
# Lint settings
  lint:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout/@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install Dependencies 
        run: npm ci
      - name: Lint
        run: npx eslint src/**/*.js
      - name: Send Slack Notification on Failure
        if: ${{ failure() }}
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,eventName,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
 # Creates a build and uploads anartifact
  build:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout/@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install Dependencies 
        run: npm ci
      - name: 'Create env file'
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
      - name: Build Static Website
        run: npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: build
      - name: Send Slack Notification on Failure
        if: ${{ failure() }}
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,eventName,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

# Test components
  e2e_test:
    needs: [lint,security, build]
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout/@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      - name: E2E Test
        uses: cypress-io/github-action@v4
        env:
          CYPRESS_cognito_username: ${{secrets.CYPRESS_EMAIL_TEST}}
          CYPRESS_cognito_password: ${{secrets.CYPRESS_PASSWORD_TEST}}
          CYPRESS_awsUserPoolId: ${{secrets.AWS_USER_POOL_ID}}
          CYPRESS_awsClientId: ${{secrets.AWS_WEB_CLIENT_ID}}
          CYPRESS_googleClientId: ${{secrets.GOOGLE_CLIENT_ID}}
          CYPRESS_googleRefreshToken: ${{secrets.GOOGLE_REFRESH_TOKEN}}
          CYPRESS_googleClientSecret: ${{secrets.GOOGLE_CLIENT_SECRET}}
      - name: Send Slack Notification on Failure
        if: ${{ failure() }}
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,eventName,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  slack_pull_request:
    needs: [e2e_test]
    runs-on: ubuntu-latest
    steps:
    - name: Notify slack pull request open
      if: ${{ github.event_name == 'pull_request' }}
      env: 
        SLACK_WEBHOOK_URL : ${{secrets.SLACK_PULL_REQUEST_WEBHOOK}}
        PULL_REQUEST_NUMBER : ${{ github.event.pull_request.number }}
        PULL_REQUEST_TITLE : ${{ github.event.pull_request.title }}
        PULL_REQUEST_AUTHOR_NAME : ${{ github.event.pull_request.user.login }}
        PULL_REQUEST_AUTHOR_ICON_URL : ${{ github.event.pull_request.user.avatar_url }}
        PULL_REQUEST_URL : ${{ github.event.pull_request.html_url }}
        PULL_REQUEST_BODY : ${{ github.event.pull_request.body }}
        PULL_REQUEST_COMPARE_BRANCH_OWNER: ${{ github.event.pull_request.head.repo.owner.login }}
        PULL_REQUEST_COMPARE_BRANCH_NAME : ${{ github.event.pull_request.head.ref }}
        PULL_REQUEST_BASE_BRANCH_OWNER: ${{ github.event.pull_request.base.repo.owner.login }}
        PULL_REQUEST_BASE_BRANCH_NAME : ${{ github.event.pull_request.base.ref }}
        IS_SEND_HERE_MENTION : false
        MAKE_PRETTY : true
        MAKE_COMPACT : true
        IS_PR_FROM_FORK: false
      uses: jun3453/slack-pr-open-notification-action@v1.3.0
 # Deploy artifact to AWS
  deploy:
    needs: [e2e_test, build]
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout/@v3
        with:
          fetch-depth: 0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{secrets.AWS_REGION}}
      - uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      - name: Deploy to S3 Bucket
        if: ${{ github.event_name == 'push' }}
        run: aws s3 sync --delete build s3://${{secrets.AWS_S3_BUCKET}}
      - name: Invalidate the cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{secrets.AWS_DIST_ID}} \
            --paths "/*"
      - name: Send Slack Notification on Failure
        if: ${{ failure() }}
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,eventName,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}